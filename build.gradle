buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.1.2'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'java'
    
}

//shadowJar needed as normal jar can't handle the number of classes contained in the apache libraries
shadowJar {
   zip64 true
}

// disable normal jar as shadowJar is used
jar.enabled = false
// automatically build the shadowJar
build.dependsOn(shadowJar);

artifacts {
	shadowJar
}


import org.apache.tools.ant.filters.*
version '0.0.1'

project.ext{
	title = "SNPViz"
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'eclipse-wtp'
    
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile 'junit:junit:4.12'
    compile group: 'commons-cli', name: 'commons-cli', version: '1+'
    compile group: 'org.biojava', name: 'biojava3-core', version: '3+'
    compile group: 'org.biojava', name: 'biojava-structure', version: '4.0.0'
    compile group: 'org.biojava', name: 'sequencing', version: '1.9+'
    compile group: 'org.apache.spark', name: 'spark-core_2.11', version: '2.1.1'
    compile group: 'org.apache.spark', name: 'spark-mllib_2.10', version: '2.1.1'
    
    

}

test {
	testLogging {
		showStandardStreams = true
	}
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

jar {
	zip64 true
    manifest {
        attributes("Implementation-Title": project.title,
                "Implementation-Version": version, "main-Class": "main.SNPViz")
    }
    doFirst {
        from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

processResources {
	filesMatching('version.properties'){
    	expand projectVersion: project.version
    }
	filesMatching('title.properties'){
    	expand projectTitle: project.title
    }
} 

eclipse.classpath.file {
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}


// needed for later automatic publishing to bintray, keep commented out
/*
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'com.uni-tuebingen.de.it.snpviz'
            artifactId 'snpViz'
        }
    }
}
*/

/*
bintray {
    user = binUser
    key = binKey
    publications = ['MyPublication']
    publish = true
    override = true
    pkg {
        repo = 'SNPVIZ'
        name = 'SNPVIZ'
        licenses = ['GPL-3.0']
        vcsUrl = "https://github.com/Integrative-Transcriptomics/SNPVIZ"
        version {
            name = project.version
            desc = 'The SNPViz Tool'
            released  = new Date()
            vcsTag = project.version
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }

    }
}
*/
